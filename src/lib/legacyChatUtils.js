import React from 'react';
import { Lock } from 'lucide-react';

export const generateAIResponse = (userMessage, chatType, friendName) => {
    const lowerCaseMessage = userMessage.toLowerCase();

    const friendPrompt = {
        sad: [
            "Lamento mucho que te sientas as√≠. A veces las cosas se ponen dif√≠ciles. Si quieres hablar de ello, soy todo o√≠dos.",
            "Entiendo, sentirse triste es agotador. Recuerda ser amable contigo mismo. ¬øHay algo en particular que te pese?",
            "Te escucho. No tienes que pasar por esto en soledad. Compartir puede aligerar la carga, si te sientes preparado/a."
        ],
        happy: [
            `¬°Qu√© maravilla! Me encanta verte as√≠ de feliz. ¬øA qu√© se debe esa sonrisa?`,
            "¬°Esa es la energ√≠a que me gusta! La alegr√≠a es contagiosa. Cu√©ntame qu√© ha pasado, ¬°celebremos juntos!",
            "¬°Fant√°stico! Me alegro much√≠simo por ti. Atesora este momento."
        ],
        anxious: [
            "La ansiedad puede ser abrumadora. Respira hondo. Estoy aqu√≠ contigo. ¬øQu√© es lo que te preocupa exactamente?",
            "Eso suena estresante. Recuerda que esta sensaci√≥n pasar√°. ¬øQu√© es lo m√°s peque√±o que podr√≠amos hacer para que te sientas un poco mejor ahora mismo?",
            "Te entiendo. La mente a veces se acelera. Vamos a desenredar esto juntos, poco a poco. ¬øPor d√≥nde empezamos?"
        ],
        question: [
            "Esa es una pregunta muy profunda. Me haces reflexionar. ¬øT√∫ qu√© piensas sobre eso?",
            "Interesante cuesti√≥n. Para poder ayudarte mejor, ¬øpodr√≠as darme un poco m√°s de contexto?",
            "Buena pregunta. Exploremos las posibilidades juntos. ¬øQu√© te llev√≥ a plantearte eso?"
        ],
        greeting: [`¬°Hola! Qu√© bueno saber de ti. ¬øC√≥mo ha ido tu d√≠a?`],
        gratitude: ["¬°De nada! Para eso estamos los amigos. üòä"],
        farewell: ["¬°Cu√≠date mucho! Ya sabes d√≥nde encontrarme si necesitas algo. ¬°Hasta pronto!"],
        identity: [
            `Soy ${friendName}, tu compa√±ero IA. Mi prop√≥sito es ser un espacio seguro para ti, un amigo que escucha sin juzgar y te apoya en tu camino.`,
            `Me llamo ${friendName}. Pienso en m√≠ mismo como un confidente digital, aqu√≠ para ayudarte a organizar tus ideas y emociones.`
        ],
        fallback: [
            "Entiendo lo que dices. ¬øTe gustar√≠a profundizar en ese tema?",
            "Gracias por compartir esto. ¬øHay algo m√°s en tu mente sobre esto?",
            "Te sigo. ¬øC√≥mo te hace sentir todo eso?",
            "Es un punto de vista interesante. ¬øQuieres explorarlo m√°s a fondo?"
        ]
    };

    if (/\b(hola|hey|buenas)\b/.test(lowerCaseMessage)) return friendPrompt.greeting[0];
    if (/\b(gracias|agradezco)\b/.test(lowerCaseMessage)) return friendPrompt.gratitude[0];
    if (/\b(adios|chao|hasta luego)\b/.test(lowerCaseMessage)) return friendPrompt.farewell[0];
    if (/\b(quien eres|que eres)\b/.test(lowerCaseMessage)) return friendPrompt.identity[Math.floor(Math.random() * friendPrompt.identity.length)];

    if (/\b(triste|mal|deprimido|hundido)\b/.test(lowerCaseMessage)) return friendPrompt.sad[Math.floor(Math.random() * friendPrompt.sad.length)];
    if (/\b(feliz|genial|increible|contento|fantastico)\b/.test(lowerCaseMessage)) return friendPrompt.happy[Math.floor(Math.random() * friendPrompt.happy.length)];
    if (/\b(ansioso|preocupado|estresado|agobiado)\b/.test(lowerCaseMessage)) return friendPrompt.anxious[Math.floor(Math.random() * friendPrompt.anxious.length)];

    if (lowerCaseMessage.includes('?')) return friendPrompt.question[Math.floor(Math.random() * friendPrompt.question.length)];
    
    const specificResponses = {
        dreams: [
            "Los sue√±os son fascinantes. ¬øQu√© emoci√≥n predominaba cuando despertaste?",
            "A menudo, nuestros sue√±os nos hablan en s√≠mbolos. ¬øHab√≠a algo que te llamara la atenci√≥n especialmente?",
        ],
        therapy: [
            "Gracias por tu honestidad. Reconocer nuestros sentimientos es el primer paso.",
            "Es un espacio seguro. No hay respuestas correctas o incorrectas, solo tu verdad.",
        ],
        motivation: [
            "¬°T√∫ tienes el poder de lograrlo! ¬øCu√°l es el primer paso, por peque√±o que sea?",
            "Recuerda por qu√© empezaste. Esa raz√≥n es tu mayor combustible.",
        ],
        relationships: [
            "Las relaciones nos ense√±an mucho sobre nosotros mismos. ¬øQu√© has aprendido de esta situaci√≥n?",
            "La empat√≠a es clave. ¬øHas intentado ponerte en el lugar de la otra persona?",
        ],
        career: [
            "Tu carrera es una parte importante de tu vida, pero no lo es todo. ¬øQu√© es lo que realmente buscas en tu trabajo?",
            "¬øQu√© habilidad nueva te gustar√≠a aprender este mes para avanzar hacia tus metas?",
        ],
        meditation: [
            "Respira hondo... y suelta. Permite que la calma te inunde.",
            "Conc√©ntrate en el aqu√≠ y el ahora. Todo lo dem√°s puede esperar.",
        ]
    };

    const categoryResponses = specificResponses[chatType] || friendPrompt.fallback;
    return categoryResponses[Math.floor(Math.random() * categoryResponses.length)];
};

export const getLegacyChatTitle = (currentChat, friendName, isPremiumUser, rawTitle = false) => {
    const titles = {
      general: `Chat con ${friendName || 'IA'}`,
      dreams: 'An√°lisis de Sue√±os',
      therapy: 'Terapia Virtual',
      motivation: 'Motivaci√≥n Personal',
      relationships: 'Consejos de Relaciones',
      career: 'Orientaci√≥n Profesional',
      meditation: 'Meditaci√≥n Guiada'
    };
    const title = titles[currentChat] || titles.general;
    
    const chatOptionDefinitions = {
      dreams: { isPremium: true },
      therapy: { isPremium: true },
      relationships: { isPremium: true },
      career: { isPremium: true },
      meditation: { isPremium: true }
    };

    if (rawTitle) return title.replace(` con ${friendName || 'IA'}`, '');

    const currentChatDef = chatOptionDefinitions[currentChat];
    if (currentChatDef && currentChatDef.isPremium && !isPremiumUser) {
      return (
        <span className="flex items-center">
          {title} <Lock className="w-4 h-4 ml-2 text-yellow-500" />
        </span>
      );
    }
    return title;
};
